# General #####################################################################

stages:
  - lint
  - test
  - deploy

# Docs ########################################################################

markdownlint:
  stage: lint
  image: node:latest
  script:
    - npm install markdownlint-cli
    - npx markdownlint docs

# flake8, black and isort #####################################################

.python:
  stage: lint
  image: python:3.9-alpine
  before_script:
    - pip install -q flake8 black isort

flake8:
  extends: .python
  script:
    - flake8 application --max-line-length=120

black:
  extends: .python
  script:
    - black application --diff --check

isort:
  extends: .python
  script:
    - isort application --check-only --diff

# Frontend ####################################################################

.frontend:
  stage: lint
  image: node:18-alpine
  before_script:
    - cd frontend
    - yarn

eslint:
  extends: .frontend
  script:
    - yarn lint

prettier:
  extends: .frontend
  script:
    - yarn format-check

# Backend #####################################################################

.backend:
  stage: test
  image: docker/compose:1.29.2
  tags:
    - docker
  services:
    - docker:dind
  before_script:
    - apk update && apk add make
    - make build
    - make migrate
  variables:
    ALLOWED_HOSTS: localhost
    POSTGRES_HOST: postgres
    POSTGRES_PORT: 5432
    POSTGRES_DB: web_template
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    DEBUG: "false"
    SECRET_KEY: test
    SITE_ADDRESS: localhost:80
    DOCKER_BUILD_ENVIRONMENT: development

mypy:
  extends: .backend
  script: make mypy

pytest:
  extends: .backend
  script: make test

# Deploy ######################################################################

.deploy:
  stage: deploy
  only:
    - master

deploy:
  extends: .deploy
  image: alpine:latest
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$DEPLOYMENT_SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - ssh -p $DEPLOYMENT_PORT $DEPLOYMENT_USER@$DEPLOYMENT_HOST "cd $DEPLOYMENT_WORKDIR ; bash deploy.sh"
