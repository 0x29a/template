# General #####################################################################

stages:
  - lint
  - test

# Docs ########################################################################

markdownlint:
  stage: lint
  image: node:latest
  script:
    - npm install markdownlint-cli
    - npx markdownlint docs

# Black #######################################################################

black:
  stage: lint
  image: python:3.9-alpine
  before_script:
    - pip install -q black
  script:
    - black --diff --check .

# Frontend ####################################################################

.frontend:
  stage: lint
  image: node:18-alpine
  before_script:
    - cd frontend
    - yarn
    - yarn add file:src/packages/client

eslint:
  extends: .frontend
  script:
    - yarn lint

prettier:
  extends: .frontend
  script:
    - yarn format-check

# Backend #####################################################################

.backend:
  stage: test
  image: docker/compose:1.29.2
  tags:
    - docker
  services:
    - docker:dind
  before_script:
    - apk update && apk add make
    - make build
    - make migrate
  variables:
    ALLOWED_HOSTS: localhost
    POSTGRES_HOST: postgres
    POSTGRES_PORT: 5432
    POSTGRES_DB: web_template
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    DEBUG: "false"
    SECRET_KEY: test
    SITE_ADDRESS: localhost:80
    DOCKER_BUILD_ENVIRONMENT: development

pytest:
  extends: .backend
  script: make test
