x-app: &default-app
  build:
    context: ./backend
    dockerfile: Dockerfile
    args:
      BUILD_ENVIRONMENT: "${DOCKER_BUILD_ENVIRONMENT:-production}"
    cache_from:
      - "${DOCKER_BUILD_IMAGE_PREFIX}/backend:latest"

  image: "${DOCKER_BUILD_IMAGE_PREFIX}/backend:${DOCKER_BUILD_IMAGE_TAG:-latest}"
  depends_on:
    - postgres
  environment:
    - ALLOWED_HOSTS
    - CSRF_TRUSTED_ORIGINS
    - ADMIN_URL
    - STATIC_URL
    - POSTGRES_HOST
    - POSTGRES_PORT
    - POSTGRES_DB
    - POSTGRES_USER
    - POSTGRES_PASSWORD
    - DEBUG
    - SECRET_KEY
    - GOOGLE_CLIENT_ID
    - GOOGLE_CLIENT_SECRET
    - CELERY_FLOWER_USER
    - CELERY_FLOWER_PASSWORD
    - CELERY_BROKER_URL

services:
  backend:
    <<: *default-app
    command: /start_django

  celery-worker:
    <<: *default-app
    command: /start_celeryworker

  celery-beat:
    <<: *default-app
    depends_on:
      - backend
    command: /start_celerybeat

  flower:
    <<: *default-app
    command: /start_flower

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
      args:
        BUILD_ENVIRONMENT: "${DOCKER_BUILD_ENVIRONMENT:-production}"
      cache_from:
        - "${DOCKER_BUILD_IMAGE_PREFIX}/frontend:latest"

    image: "${DOCKER_BUILD_IMAGE_PREFIX}/frontend:${DOCKER_BUILD_IMAGE_TAG:-latest}"
    environment:
      - NEXT_PUBLIC_BACKEND_URL
      - NEXTAUTH_GOOGLE_CLIENT_ID
      - NEXTAUTH_GOOGLE_CLIENT_SECRET
      - NEXTAUTH_URL
      - NEXTAUTH_SECRET

  postgres:
    image: docker.io/postgres:12.6
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  redis:
    image: docker.io/redis:6.0

volumes:
  production_postgres_data: {}
